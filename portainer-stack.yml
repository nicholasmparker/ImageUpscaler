services:
  init:
    image: curlimages/curl:latest
    user: root
    command: |
      sh -c '
      mkdir -p /models &&
      chmod 777 /models &&
      if [ ! -f "/models/RealESRGAN_x4plus.pth" ]; then
        echo "Downloading RealESRGAN model..." &&
        curl -L https://github.com/xinntao/Real-ESRGAN/releases/download/v0.1.0/RealESRGAN_x4plus.pth -o /models/RealESRGAN_x4plus.pth &&
        chmod 666 /models/RealESRGAN_x4plus.pth;
      else
        echo "Model already exists";
      fi'
    volumes:
      - esrgan_models:/models

  api:
    image: ghcr.io/nicholasmparker/imageupscaler-api:latest
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ESRGAN_HOST=esrgan
      - ESRGAN_PORT=8001
    networks:
      - upscaler-network
    ports:
      - "30080:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      - esrgan
    restart: unless-stopped

  esrgan:
    image: ghcr.io/nicholasmparker/imageupscaler-esrgan:latest
    environment:
      - USE_GPU=false
      - MODEL_PATH=/models/RealESRGAN_x4plus.pth
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT}
    volumes:
      - esrgan_models:/models
    networks:
      - upscaler-network
    ports:
      - "30081:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      init:
        condition: service_completed_successfully
    restart: unless-stopped

networks:
  upscaler-network:
    driver: bridge

volumes:
  esrgan_models:
    driver: local
