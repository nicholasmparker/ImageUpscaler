# Development compose file - uses local builds and volumes
version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ESRGAN_HOST=esrgan
      - ESRGAN_PORT=8001
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT}
    networks:
      - upscaler-network
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      - esrgan

  esrgan:
    build:
      context: .
      dockerfile: Dockerfile.esrgan
    volumes:
      - ./models:/app/models
    environment:
      - USE_GPU=false
      - MODEL_PATH=/app/models/RealESRGAN_x4plus.pth
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT}
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    networks:
      - upscaler-network
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  test:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    command: >
      sh -c "pip install -r requirements/test.txt &&
             python -m pytest tests/e2e/test_upscale.py -v"
    environment:
      - API_HOST=api
      - API_PORT=8000
    networks:
      - upscaler-network
    depends_on:
      api:
        condition: service_healthy
      esrgan:
        condition: service_healthy

networks:
  upscaler-network:
    driver: bridge
