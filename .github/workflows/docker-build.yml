name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'esrgan_service/**'
      - 'requirements/**'
      - 'Dockerfile'
      - 'Dockerfile.esrgan'
      - 'docker-compose*.yml'
  workflow_dispatch:  # Allow manual triggers

# Cancel in-progress runs when a new workflow is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  API_IMAGE_NAME: imageupscaler-api
  ESRGAN_IMAGE_NAME: imageupscaler-esrgan

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # Use buildx driver with cache exports
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Cache pip packages
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.API_IMAGE_NAME }}:latest
          cache-from: |
            type=gha,scope=api
            type=registry,ref=${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.API_IMAGE_NAME }}:latest
          cache-to: type=gha,scope=api,mode=max
          # Export layers for better caching
          outputs: type=registry,compression=zstd

      - name: Build and push ESRGAN image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.esrgan
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.ESRGAN_IMAGE_NAME }}:latest
          cache-from: |
            type=gha,scope=esrgan
            type=registry,ref=${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.ESRGAN_IMAGE_NAME }}:latest
          cache-to: type=gha,scope=esrgan,mode=max
          # Export layers for better caching
          outputs: type=registry,compression=zstd
